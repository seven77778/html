https://www.cnblogs.com/suhaihong/p/6598308.html

阶段1：
最开始的前后端，一个请求，刷新页面，HTTP请求不是持续的连接，你请求一次，服务器响应一次，然后就完了。

阶段2：
后来有了Ajax。有了Ajax，我们就不用每次都请求一个完整的新页面了，取而代之的是，每次只请求需要的部分页面信息就可以了。这显然是一个进步。

阶段3：
但是比如微博这种，你的好友会随时的推送新的状态，然后你的新鲜事会实时自动刷新，
要达成这个需求，我们需要让用户一直与服务器保持一个有效连接。目前最简单的实现方法，就是让用户和服务器之间保持长轮询（long polling）。

node.js的最大优点是处理并行访问，如果一个web应用程序同时会有很多访问连接，就能体现使用node.js的优势。
另一个好处是，使用javascript作为服务器端脚本语言，可以消除一些与浏览器端js脚本的冲突。甚至发挥javascript动态编程的特性，
在服务器与浏览器之间建立直接的动态程序。